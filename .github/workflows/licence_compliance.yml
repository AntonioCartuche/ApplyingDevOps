name: License Compliance Check

# El flujo de trabajo se activa en eventos de push o pull request a la rama principal.
on:
  push:
    branches:
      - main  # Se ejecuta en cualquier push a la rama principal
  pull_request:
    branches:
      - main  # También se ejecuta en pull requests hacia la rama principal

jobs:
  check-licenses:
    runs-on: ubuntu-latest  # El trabajo se ejecuta en un entorno Ubuntu
    steps:
      # Paso 1: Descargar el código del repositorio
      - name: Checkout code
        uses: actions/checkout@v3  # Usa la acción de GitHub para obtener el código fuente del repositorio

      # Paso 2: Configurar el entorno de Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10  # Establece la versión de Python que se usará (en este caso, 3.10)

      # Paso 3: Instalar las dependencias del proyecto
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip  # Actualiza pip
          pip install -r requirements.txt  # Instala las dependencias listadas en requirements.txt

      # Paso 4: Generar el archivo requirements.txt si aún no existe
      - name: Generate requirements file
        run: |
          pip freeze > requirements.txt  # Genera un archivo requirements.txt con las dependencias actuales

      # Paso 5: Obtener la información de licencias de las dependencias
      - name: Get license info
        run: |
          pip-licenses --format=json --output-file=license-results.txt  # Genera un archivo license-results.txt con la información de licencias en formato JSON

      # Paso 6: Verificar las licencias presentes y las que faltan
      - name: Check for missing licenses
        run: |
          # Lista de licencias permitidas que se aceptan en el proyecto
          allowed_licenses=("MIT" "ISC" "0BSD" "BSD-2-Clause" "BSD-3-Clause" "Apache-2.0" "GPL-3.0" "LGPL-3.0")
          
          # Extrae las licencias de las dependencias instaladas desde el archivo JSON generado
          installed_licenses=$(cat license-results.txt | jq -r '.[].License')
          
          # Inicializa un arreglo para almacenar las licencias faltantes
          missing_licenses=()

          # Itera sobre las licencias permitidas y verifica si alguna falta
          for license in "${allowed_licenses[@]}"; do
            if ! echo "$installed_licenses" | grep -q "$license"; then  # Si la licencia permitida no está presente
              missing_licenses+=("$license")  # Añádela al arreglo de licencias faltantes
            fi
          done
          
          # Si se encontraron licencias faltantes, imprímelas
          if [ ${#missing_licenses[@]} -gt 0 ]; then
            echo "Missing licenses: ${missing_licenses[@]}"  # Muestra las licencias faltantes
          else
            echo "All required licenses are present."  # Si no faltan licencias, confirma que todas están presentes
          fi

      # Paso 7: Subir los resultados del cumplimiento de licencias como un artefacto
      - name: Upload license compliance results
        uses: actions/upload-artifact@v3  # Usa la acción de GitHub para cargar el archivo como un artefacto
        with:
          name: license-results  # Nombre del artefacto
          path: license-results.txt  # Ruta al archivo que contiene los resultados de las licencias
