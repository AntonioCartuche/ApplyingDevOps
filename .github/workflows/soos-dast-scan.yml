name: "SOOS DAST Scan"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  soos:
    permissions:
      security-events: write # Para subir alertas de análisis
      actions: read # Solo requerido para repositorios privados
    name: SOOS DAST Analysis
    runs-on: ubuntu-latest
    steps:
      # Clona el repositorio
      - name: Checkout code
        uses: actions/checkout@v3
      
      # Configura Python (si usas Django u otro framework en Python)
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11.4 # Cambia según la versión que uses

      # Instala dependencias
      - name: Install dependencies
        run: |
          pip install -r requirements.txt  # Ajusta según tu archivo de dependencias

      # Inicia la aplicación en segundo plano
      - name: Start the application
        run: |
          nohup python manage.py runserver 0.0.0.0:8000 &  # Cambia según cómo inicias tu app

      # Espera unos segundos para que la aplicación esté completamente activa
      - name: Wait for application to start
        run: sleep 10

      # Ejecuta el análisis de SOOS DAST
      - name: Run SOOS DAST Analysis
        uses: soos-io/soos-dast-github-action@v2
        with:
          client_id: ${{ secrets.SOOS_CLIENT_ID }}
          api_key: ${{ secrets.SOOS_API_KEY }}
          project_name: "ProyectFinalDBP"
          scan_mode: "baseline"
          target_url: "http://127.0.0.1:8000"
          output_format: "sarif"

      # Sube el reporte generado por SOOS
      - name: Upload SOOS DAST SARIF Report
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif
